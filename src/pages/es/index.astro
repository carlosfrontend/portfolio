---
import Layout from "../../layouts/Layout.astro";
import Hero from "../../components/Hero.astro";
import SectionContainer from "../../components/SectionContainer.astro";
import projects from "../../components/data/projects";
import CardProject from "../../components/CardProject.astro";
import ProjectsIcon from "../../components/ProjectsIcon.astro";
import Skills from "../../components/Skills.astro";
import Header from "../../components/Header.astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import { useTranslations } from "../../i18n/utils";
import type { languageList } from "../../i18n/ui";

const currentLang = Astro.currentLocale || "es";
const translateLabels = useTranslations(currentLang as keyof typeof languageList);

const sections = [
  { id: translateLabels('projects.id'), name: translateLabels('projects.title'), icon: ProjectsIcon },
  { id: translateLabels('about.id'), name: translateLabels('about.title'), icon: ProjectsIcon },
  { id: translateLabels('skills.id'), name: translateLabels("skills.title"), icon: ProjectsIcon },
];

const PROJECTS = projects();

---

<Layout
  title="Porfolio de Carlos Pulido Desarrollador y Programador Web- Página principal."
  description="Contrata a Carlos Pulido para crear aplicaciones web o móviles."
>
  <main class="relative pt-4 w-full desktop:w-8/12 desktop:self-center">
    <Header id={translateLabels('home.id')}/>
    <SectionContainer className="pt-10">
      <!--distance from header -->
      <Hero />
    </SectionContainer>

    {
      sections.map((section) => (
        <SectionContainer id={section.id} className="pt-36">
          {section.name === translateLabels('projects.title') ? (
            <h3 class="text-3xl flex items-center gap-x-2 pb-14 font-bold dark:text-white text-slate-800">
              <span>
                <svg
                  class="size-8"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                  <path d="M7 8l-4 4l4 4" />
                  <path d="M17 8l4 4l-4 4" />
                  <path d="M14 4l-4 16" />
                </svg>
              </span>
              {section.name}
            </h3>
          ) : section.name === translateLabels('about.title') ? (
            <h3 class="text-3xl flex items-center gap-x-2 pb-4 font-bold dark:text-white text-slate-800">
              <span>
                <svg
                  class="size-8"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                  <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
                  <path d="M6 21v-2a4 4 0 0 1 4 -4h4" />
                  <path d="M15 19l2 2l4 -4" />
                </svg>
              </span>
              {section.name}
            </h3>
             <p class="text-xl font-normal text-pretty dark:text-white/80 text-gray-700">
            Aporto <strong class="dark:text-yellow-200/80 text-slate-700 font-bold"
            >habilidades analíticas y organizativas</strong>, y utilizo mis conocimientos para crear <strong class="dark:text-yellow-200/80 text-slate-700 font-bold">interfaces web</strong> que combinan <strong class="dark:text-yellow-200/80 text-slate-700 font-bold"
            >diseño intuitivo y funcionalidad.</strong>
        </p>
        <p class="text-xl font-normal text-pretty dark:text-white/80 text-slate-700">
          Mi curiosidad y dedicación me impulsan a <span
            class="dark:text-yellow-200/80 text-slate-700 font-bold">aprender constantemente</span
          > y a conectar con las necesidades de las personas a través de la tecnologías.
        </p>
          ) : (
            <h3 class="text-3xl flex items-center gap-x-2 pb-4 font-bold dark:text-white text-slate-800">
              <span>
                <svg
                  class="size-8"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-tools"
                >
                  <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                  <path d="M3 21h4l13 -13a1.5 1.5 0 0 0 -4 -4l-13 13v4" />
                  <path d="M14.5 5.5l4 4" />
                  <path d="M12 8l-5 -5l-4 4l5 5" />
                  <path d="M7 8l-1.5 1.5" />
                  <path d="M16 12l5 5l-4 4l-5 -5" />
                  <path d="M16 17l-1.5 1.5" />
                </svg>
              </span>
              {translateLabels('skills.title')}
            </h3>
            <Skills/>
          )}

          {section.name === translateLabels('projects.title') &&
            PROJECTS.slice(0, 3).map((project) => (
              <CardProject
                title={project.title}
                description={project.description}
                image={project.image}
                loading={project.loading}
                codeLink={project.codeLink}
                liveLink={project.liveLink}
                tags={project.tags}
              />
            ))}
          {section.name === translateLabels('projects.title') && (
            <a
              href={getRelativeLocaleUrl(currentLang, 'otros-proyectos')}
              class="flex h-10 items-center justify-center dark:bg-cyan-950 text-slate-100 bg-slate-800 rounded-sm w-36 px-2"
            >
             {translateLabels('projects.button')}
            </a>
          )}
        </SectionContainer>
      ))
    }
   
  </main>
</Layout>

