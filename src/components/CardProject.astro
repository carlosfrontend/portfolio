---
import { Image } from "astro:assets";
import DescriptionProse from "./DescriptionProse.astro";
import { useTranslations } from "../i18n/utils";
import type { languageList } from "../i18n/ui";
const currentLang = Astro.currentLocale || "es";

const translateLabels = useTranslations(
  currentLang as keyof typeof languageList
);

interface Props {
  title: string;
  description: string;
  image: ImageMetadata;
  imageAlt: string;
  codeLink: string;
  liveLink: string;
  tags: Array<object>;
  loading: any;
}

const {
  title,
  description,
  image,
  imageAlt,
  codeLink,
  liveLink,
  tags,
  loading,
} = Astro.props;
---

<article id="project" class="w-full pb-14 border-solid prose-violet">
  <Image
    id="project-image"
    class="tablet:w-[380px] rounded-md shadow-md mb-4"
    height="450"
    width="800"
    loading={loading}
    src={image}
    alt={imageAlt}
  />
  <div class="flex justify-start pt-2 pb-4 gap-x-3">
    <a
      href={codeLink}
      class="dark:bg-emerald-600 bg-slate-700 rounded flex gap-1 px-3 py-2 transition duration-150 ease-in-out hover:transform hover:scale-110"
      aria-label={translateLabels("projects.code")}
      target="_blank"
      rel="noreferrer noopener"
      ><svg
        xmlns="http://www.w3.org/2000/svg"
        class="size-6 text-indigo-300 dark:text-white/80"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
          d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5"
        ></path></svg
      ><span class="dark:text-white">{translateLabels("projects.code")}</span
      ></a
    >
    <a
      href={liveLink}
      class="dark:bg-purple-700 bg-slate-700 rounded flex gap-1 px-3 py-2 transition duration-150 ease-in-out hover:transform hover:scale-110"
      aria-label={translateLabels("projects.live")}
      target="_blank"
      rel="noreferrer noopener"
      ><svg
        class="size-6 text-indigo-300 dark:text-white/80"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
          d="M21 12v3a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h9"
        ></path><path d="M7 20l10 0"></path><path d="M9 16l0 4"></path><path
          d="M15 16l0 4"></path><path d="M17 4h4v4"></path><path d="M16 9l5 -5"
        ></path></svg
      ><span class="dark:text-white">{translateLabels("projects.live")}</span
      ></a
    >
  </div>

  <h3 class="text-2xl pb-2 dark:text-orange-200 text-slate-700 font-bold">
    {title}
  </h3>
  <div class="flex flex-wrap gap-x-4 py-3">
    {
      tags.map((tag) => (
        <div class="min-w-18 min-h-7 dark:bg-stone-600/60 dark:text-sky-50 bg-slate-700 gap-x-1 px-2 py-1 rounded-sm flex justify-center items-center my-1 text-sm font-semibold mb-4">
          <i class={`${tag["className"]}`} />
          {tag["name"]}
        </div>
      ))
    }
  </div>
  <DescriptionProse>
    <p>
      {description}
    </p>
  </DescriptionProse>
</article>

<script type="module">
  // CardProject transitions
  const projects = [...document.querySelectorAll("#project")];

  const effectIn = [
    "transition-all",
    "duration-150",
    "delay-50",
    "ease-in",
    "opacity-90",
    "bg-black",
    "transform",
    "scale-105",
    "rotate-1",
    "backward",
  ];

  const effectOut = [
    "transition-all",
    "duration-300",
    "delay-0",
    "ease-out",
    "opacity-100",
    "bg-black",
    "transform",
    "scale-100",
    "rotate-0",
    "forward",
  ];

  function handleEnter(e) {
    const image = e.target.firstElementChild;
    image.classList.add(...effectIn);
    image.classList.remove(...effectOut);
    image.classList.add("dark:shadow-white/30");
    image.classList.add("shadow-slate-900/40");
  }

  function handleLeave(e) {
    const image = e.target.firstElementChild;
    image.classList.remove(...effectIn);
    image.classList.add(...effectOut);
    image.classList.remove("dark:shadow-white/30");
    image.classList.remove("shadow-slate-900/40");
  }

  projects.forEach((project) =>
    project.addEventListener("mouseenter", handleEnter)
  );

  projects.forEach((project) =>
    project.addEventListener("mouseleave", handleLeave)
  );
</script>
